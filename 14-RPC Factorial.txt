import xmlrpc.client

def main():
	server=xmlrpc.client.ServerProxy('http://localhost:8000')
	n=int(input("enter the number"))
	result=server.calculate_factorial(n)
	print(result)

if __name__=='__main__':
	main()


server 

from xmlrpc.server import SimpleXMLRPCServer

def factorial(n):
	if n==0 or n==1:
		return 1
	else:
		return n*factorial(n-1)

server=SimpleXMLRPCServer(('localhost',8000))
server.register_function(factorial,'calculate_factorial')
server.serve_forever()



# 1. RPC (Remote Procedure Call) is a way for programs on different computers to talk to each 
# other over a network. It works like a regular function call but it happens between processes 
# running on different machines. It helps distributed systems communicate by allowing one 
# program to call a function on another program running on a different machine. 
# 2. In an RPC system, there are typically two main components: the client and the server. The 
# client sends a request to the server, which executes the requested procedure and sends back 
# the result to the client. 
# 3. Client-server interaction involves the client sending a request to the server, which then 
# processes the request and sends a response back to the client. This interaction follows a 
# specific protocol, such as HTTP or TCP/IP, to ensure communication between the client and 
# server. 
# 4. Scalability and load balancing in distributed applications involve distributing incoming 
# requests evenly across multiple servers to prevent any single server from becoming overloaded. 
# Techniques like load balancers and clustering help manage increased traffic and maintain 
# system performance. 
# 5. RPC offers simplicity and ease of use, but it may suffer from performance issues and tight 
# coupling between client and server. Other protocols like REST or messaging systems offer more 
# flexibility but might require more effort to set up and maintain. 
# 6. Socket programming is a way to enable communication between processes on different 
# computers. It allows processes to send and receive data over a network using sockets, which 
# are endpoints for communication. 